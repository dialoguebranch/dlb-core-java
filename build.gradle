plugins {
	id 'base'
	id 'java'
	id 'java-library'
	id 'application'
	id 'distribution'
	id 'maven-publish'
	id 'signing'
}

group = 'com.dialoguebranch'
archivesBaseName = 'dlb-core-java'
version = '1.2.2-SNAPSHOT'

repositories {
	mavenCentral()
}

application {
	mainClassName = "com.dialoguebranch.cli.CommandLineRunner"
}

run {
	standardInput = System.in
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withJavadocJar()
	withSourcesJar()
}

javadoc {
	source = sourceSets.main.allJava
	destinationDir = reporting.file("javadoc")
	include 'com/dialoguebranch/**'
	options.source = "17"
}

dependencies {
	api "nl.rrd:rrd-utils:3.0.3"
	api 'com.fasterxml.jackson.module:jackson-modules-java8:2.13.4'
	testImplementation 'junit:junit:4.13.2'
}

jar {
	manifest {
		attributes 'Main-Class': 'com.dialoguebranch.cli.CommandLineRunner'
		attributes 'Class-Path': configurations.compileClasspath.collect({ it.name }).join(' ')
	}
}

distributions {
	main {
		distributionBaseName = archivesBaseName
		contents {
			from jar
		}
	}
}

[distZip, distTar, installDist]*.dependsOn jar

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = base.archivesName.get()
			from components.java

			pom {
				name = 'Dialogue Branch Core Java Library'
				description = 'Dialogue Branch gives you creative freedom to write engaging interactive conversations...'
				url = 'https://www.dialoguebranch.com'
				packaging = 'jar' // jar is the default, but still set it to make it clear

				licenses {
					license {
						name = 'MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				developers {
					developer {
						id = 'hopdenakker'
						name = 'Harm op den Akker'
						email = 'hopdenakker@fruittreelabs.com'
						organizationUrl = 'https://fruittreelabs.com/'
					}
					developer {
						id ='dhofs'
						name = 'Dennis Hofs'
						email = 'd.hofs@rrd.nl'
						organizationUrl = 'https://rrd.nl'
					}
				}
				scm {
					url = 'https://github.com/dialoguebranch/dlb-core-java/tree/main'
					connection = 'scm:git:git://github.com/dialoguebranch/dlb-core-java.git'
					developerConnection = 'scm:git:ssh://github.com:dialoguebranch/dlb-core-java.git'
				}
			}
		}
	}
	repositories {
		maven {
			def sonatypeUsername = project.properties.ossrhUsername
			if (!sonatypeUsername)
				sonatypeUsername = ''
			def sonatypePassword = project.properties.ossrhPassword
			if (!sonatypePassword)
				sonatypePassword = ''
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username sonatypeUsername
				password sonatypePassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}